# Example of the librpma_gpspm server job

[global]
ioengine=librpma_gpspm_server
serverip=[IP address to listen on]
port=[base port; ports <port; port + numjobs - 1> will be used]
thread

# The server side spawns one thread for each expected connection from
# the client-side, opens and registers the range dedicated for this thread
# (a workspace) from the provided memory.
# Each of the server threads accepts a connection on the dedicated port
# (different for each and every working thread), accepts and executes flush
# requests, and sends back a flush response for each of the requests.
# When the client is done it sends the termination notice to the server's thread.

[server]
create_serialize=0 # (required) forces specific initiation sequence
numjobs=[# of expected connections]
iodepth=[# of parallel GPSPM requests]
iomem_align=$pagesize
size=[size of workspace for a single connection]
filename=[device dax or an existing fsdax file or "malloc" for allocation from DRAM]

# The client will terminate the server when the client will end up its job.
time_based
runtime=365d
